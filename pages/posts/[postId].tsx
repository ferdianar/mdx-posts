import { NextPage } from 'next'
import { Fragment } from 'react'
import Head from 'next/head'
import * as fs from "fs"
import path from 'path'
import matter from "gray-matter"
import { MDXRemote } from 'next-mdx-remote'
import { serialize } from "next-mdx-remote/serialize"
import Image from 'next/image'

const DetailPost: NextPage = ({ frontMatter, mdxSource }: any) => {
    const { title, category, description, author, cover } = frontMatter
    return (
        <Fragment>
            <Head>
                <title>MDX - {title}</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className="container">
                <div style={{ position: "relative", width: "100%", height: "220px" }}>
                    <Image src={cover} style={{ borderRadius: "16px" }} objectFit="cover" layout="fill" alt={title} />
                </div>
                <h1>{title}</h1>
                <h3>{category}</h3>
                <h5>{description}</h5>
                <p>{author}</p>
                <MDXRemote {...mdxSource} />
            </div>
        </Fragment>
    )
}

export async function getStaticPaths() {
    const files = fs.readdirSync(path.join("md", "posts"))

    const paths = files.map((filename: any) => ({
        params: {
            postId: filename.replace(".mdx", "")
        }
    }))

    return {
        paths,
        fallback: false
    }
}

export async function getStaticProps(context: any) {
    const { postId } = context.params

    const markdownWithMeta = fs.readFileSync(path.join("md", "posts", postId + ".mdx"), "utf-8")
    const { data: frontMatter, content } = matter(markdownWithMeta)

    const mdxSource = await serialize(content)

    return {
        props: {
            frontMatter,
            mdxSource,
            postId
        }
    }
}

export default DetailPost